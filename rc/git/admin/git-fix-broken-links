#!/usr/bin/env bash

# For all broken symlinks in the repo:
#
#   - look at the basename of the (nonexistent) path they are pointing to
#   - look for files in the repo matching that
#   - if there's more than one, prompt the user to select one
#   - fix the broken symlink by pointing it at the found/selected file.

set -e
source "$GIT_HELPERS_HOME"/config/.helpers-rc

not_link() {
  for arg in "$@"; do
    if [ "$(realpath "$link")" != "$(realpath "$arg")" ]; then
      echo "$arg"
    fi
  done
}

OLD_IFS="$IFS"
IFS=$'\n'
for line in $(git find-broken-links "$@"); do
  link="${line%%: *}"
  dest="$(basename "${line##*: }")"
  echo "Found broken link: $link -> $dest"

  candidates=$(not_link $(git find "$dest" | sort ))
  num_candidates="$(count $candidates)"

  if [ "$num_candidates" -eq 1 ]; then
    candidate="$candidates"
  elif [ "$num_candidates" -eq 0 ]; then
    err "Found no candidates for $dest"
  else
    echo "Found $num_candidates possible intended destinations for $link; choose one:"
    select candidate in $candidates; do
      break
    done
  fi

  new_dest="$(git relpath "$candidate" "$link")"
  echo "Redirecting link $link to $new_dest (was: $dest)"
  rm -f "$link"
  ln -s "$new_dest" "$link"
  echo ''

done
IFS="$OLD_IFS"
