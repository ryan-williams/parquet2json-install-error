#!/usr/bin/env bash

source "$(dirname "${BASH_SOURCE[0]}")"/vars/.vars-rc

alias xt=exit

alias ma=mk-alias
alias mka=mk-alias
defn ua unalias
defn us unset
defn usf unset -f

# Sourcing
alias resource="unalias resource; source ~/.bashrc"

alias rsrc="source ~/.bashrc"
alias src="source ~/.bashrc"
alias rs="source ~/.bashrc"
alias rsrs="source ~/.bashrc"
alias rsbp="source ~/.bash_profile"

export dn=/dev/null

append_to PKG_CONFIG_PATH "$HOME/lib" "$HOME/lib64"

defn rmf rm -f
defn rmrf rm -rf

defn dfh df -h
alias cfgh="./configure --prefix=$HOME && make && make install"
cmi() {
  ./configure --prefix=$HOME "$@" && make && make install
}
export -f cmi

defn tcmi tar-extract-configure-make-install

defn m man

cd_cat() {
  if [ $# -eq 0 ]; then
    pushd ~
  elif [ -d "$1" ]; then
    pushd "$1"
  else
    cat "$@"
  fi
}
export -f cd_cat
defn c cd_cat

alias s=cat
alias cv="cat -v"

defn cpr cp -r

err() {
	echo "$@" >&2
}
export -f err

die() {
	err "$1"
	shift
	return "${1:-1}"
}
export -f die

toggle_ifs() {
    verbose=
    if [ $# -gt 0 -a "$1" == "-v" ]; then
      verbose=1
    fi

    if [ "$IFS" == $'\n' ]; then
      if [ -z "$OLD_IFS" ]; then
        echo "ERROR: No OLD_IFS set" >&2
        exit 1
      else
        export IFS="$OLD_IFS"
        echo "\$IFS restored"
      fi
    else
      export OLD_IFS="$IFS"
      export IFS=$'\n'
      echo "\$IFS now \$'\\n'"
    fi

}
export -f toggle_ifs
alias bak-ifs=toggle_ifs
alias ifs="toggle_ifs"

pswd() {
  if [ $# -eq 0 ]; then
    num=30
  else
    num="$1"; shift
  fi
  cat /dev/urandom | perl -pe 's/[^0-9a-zA-Z]//g' | head -c "$num"
}
export -f pswd

export HISTCONTROL=ignorespace

defn bm bash-markdown-fence.py --
defn bmf bash-markdown-fence.py -f --
defn bmff bash-markdown-fence.py -ff --
defn bmfff bash-markdown-fence.py -fff --

defn wn watch -n
defn wn5 watch -n5
